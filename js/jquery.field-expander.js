// Generated by CoffeeScript 1.6.3
/*
FieldExpander jQuery Plugin v1.0 - Auto grows and shrinks text fields in forms.
Release: 15/07/2013
Author: Tom Simnett <tom@initforthe.com>

http://github.com/initforthe/jquery-field-expander

Licensed under the MIT licence: opensource.org/licenses/MIT
*/

(function($, window, document) {
  var $this, methods, _internals, _settings;
  $this = void 0;
  _settings = {
    fields: 'input[type=text],input[type=tel],input[type=email]'
  };
  methods = {
    init: function(options) {
      $this = $(this);
      $.extend(_settings, options || {});
      $this.each(function(index, el) {
        $(el).find(_settings.fields).each(function(i, field) {
          return $(field).data('size', $(field).attr('size'));
        });
        return _internals.setListener(el);
      });
      return $this;
    },
    destroy: function() {
      $this.each(function(index, el) {
        return _internals.unsetListener(el);
      });
      return $this;
    }
  };
  _internals = {
    setListener: function(which) {
      return $(which).on('keypress keyup', _settings.fields, _internals.setFieldSize);
    },
    unsetListener: function(which) {
      return $(which).off('keypress keyup', _settings.fields, _internals.setFieldSize);
    },
    setFieldSize: function(event) {
      var len, which;
      which = $(event.target);
      len = which.val().length;
      if (len > which.data('size')) {
        return which.attr('size', len + 1);
      } else {
        return which.attr('size', which.data('size'));
      }
    }
  };
  return $.fn.fieldExpander = function(method) {
    if (methods[method]) {
      return methods[method].apply(this, Array.prototype.slice.call(arguments, 1));
    } else if (typeof method === "object" || !method) {
      return methods.init.apply(this, arguments);
    } else {
      return $.error("Method " + method + " does not exist on jquery.fieldExpander");
    }
  };
})(jQuery, window, document);
